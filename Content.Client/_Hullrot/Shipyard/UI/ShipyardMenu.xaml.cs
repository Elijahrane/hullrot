using System.Linq;
using Content.Client._Hullrot.Shipyard.BUI;
using Content.Client.UserInterface.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;
using static Robust.Client.UserInterface.Controls.BaseButton;

namespace Content.Client._Hullrot.Shipyard.UI;

[GenerateTypedNameReferences]
public sealed partial class ShipyardMenu : FancyWindow
{
    [Dependency] private readonly IPrototypeManager _protoManager = default!;
    private readonly ShipyardBoundUserInterface _menu;
    public event Action<ButtonEventArgs>? OnSellShip;
    public event Action<ButtonEventArgs>? OnBuyShip;

    public ShipyardMenu(ShipyardBoundUserInterface owner)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        _menu = owner;
        SellShipButton.OnPressed += (args) => { OnSellShip?.Invoke(args); };
        BuyShipButton.OnPressed += (args) => { OnBuyShip?.Invoke(args); };
    }



}
